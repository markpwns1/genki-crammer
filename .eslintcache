[{"C:\\Users\\Mark\\Desktop\\My Stuff\\Programming\\genki-vocab\\src\\index.js":"1","C:\\Users\\Mark\\Desktop\\My Stuff\\Programming\\genki-vocab\\src\\App.js":"2","C:\\Users\\Mark\\Desktop\\My Stuff\\Programming\\genki-vocab\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":5113,"mtime":1610777832525,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1vvn1jn",{"filePath":"11","messages":"12","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"C:\\Users\\Mark\\Desktop\\My Stuff\\Programming\\genki-vocab\\src\\index.js",[],["17","18"],"C:\\Users\\Mark\\Desktop\\My Stuff\\Programming\\genki-vocab\\src\\App.js",["19","20","21","22","23"],"// https://www.csus.edu/indiv/s/sheaa/projects/genki/vocab_main.html\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { load } from 'cheerio';\nimport { Component } from \"react\";\n\nconst hepburn = require(\"hepburn\");\n\nconst CROSS_ORIGIN_HACK = \"https://cors-anywhere.herokuapp.com/\";\nconst SCRAP_URL = \"ohelo.org/japn/lang/genki_vocab_table.php?lesson=\";\n\nconst LESSONS = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23];\n\nconst lessonContents = {\n\n};\n\nexport default class App extends Component {\n\n  state = { \n    lessonNumber: 1,\n    vocabItems: [ ],\n    currentQueue: [ ],\n    vocabIndex: 0,\n    revealDetails: false,\n    currentWord: null,\n    hasFailed: false\n  }\n\n  componentDidMount() {\n    this.updateState = this.updateState.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onLessonChange = this.onLessonChange.bind(this);\n    this.setLesson = this.setLesson.bind(this);\n\n    this.setLesson();\n  }\n\n  shuffleArray(array) {\n    let a = [ ...array ];\n    for (var i = a.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = a[i];\n        a[i] = a[j];\n        a[j] = temp;\n    }\n    return a\n  }\n\n  setLesson() {\n    fetch(CROSS_ORIGIN_HACK + (SCRAP_URL + this.state.lessonNumber))\n    .then(x => x.text())\n    .then(x => {\n      let vocabItems = [ ];\n      const $ = load(x);\n      const table = $(\"tbody\");\n      const rows = table.children();\n      const rowCount = rows.length;\n      for (let i = 1; i < rowCount; i++) {\n        const row = rows.eq(i);\n        let vocab;\n        if(row.children().length == 3) {\n          vocab = {\n            kana: row.children().eq(0).text().trim(),\n            kanji: row.children().eq(1).text().trim(),\n            english: row.children().eq(2).text().split(/,|;|\\//).map(x => x.trim()),\n          };\n        }\n        else {\n          vocab = {\n            kana: row.children().eq(0).text().trim(),\n            kanji: row.children().eq(1).text().trim(),\n            romaji: row.children().eq(2).text().split(/,|;|\\//).map(x => x.trim().toLowerCase()),\n            english: row.children().eq(3).text().split(/,|;|\\//).map(x => x.trim()),\n          };\n        }\n        \n        vocab.romaji = vocab.kana.split(\"／\").map(x => hepburn.fromKana(x).trim().toLowerCase()\n          .replace(/ō/, \"ou\")\n          .replace(/ā/, \"aa\")\n          .replace(/ē/, \"ei\")\n          .replace(/ū/, \"uu\")\n          .replace(/ī/, \"ii\"));\n        vocabItems.push(vocab);\n      }\n\n      this.updateState({\n        currentQueue: this.shuffleArray(vocabItems),\n        vocabItems: vocabItems,\n        vocabIndex: this.random(vocabItems.length),\n        revealDetails: false\n      }, () => {\n        this.updateState({\n          currentWord: this.state.currentQueue.pop()\n        });\n      });\n    });\n  }\n\n  random(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  updateState(newStates, callback) {\n    const s = {\n      ...this.state,\n      ...newStates\n    };\n\n    this.setState(s, callback);\n  }\n\n  onKeyDown(e) {\n    // console.log(e);\n    if(e.key === \"Enter\") {\n      if(this.state.currentWord.romaji.map(x => x\n          .replace(/[^0-9a-z\\s]/gi, '')\n          .replace(\"see\", \"sei\")\n          .replace(\"oo\", \"ou\"))\n        .includes(e.target.value.replace(/[^0-9a-z\\s]/gi, '').toLowerCase()\n          .replace(\"see\", \"sei\")\n          .replace(\"oo\", \"ou\"))) {\n\n        if(this.state.hasFailed)\n          this.state.currentQueue.unshift(this.state.currentWord);\n\n        this.updateState({\n          currentWord: this.state.currentQueue.pop(),\n          revealDetails: false,\n          hasFailed: false\n        });\n      }\n      else {\n        this.updateState({\n          revealDetails: true,\n          hasFailed: true\n        });\n      }\n      e.target.value = \"\";\n    }\n  }\n\n  onLessonChange(e) {\n    this.updateState({\n      lessonNumber: e.target.value\n    }, () => {\n      this.setLesson();\n    });\n  }\n\n  render() {\n    const vocab = this.state.currentWord;\n    if(!vocab) return <div></div>;\n\n    return (\n      <div className=\"app\">\n        <select className=\"lesson-select\" onChange={e => this.onLessonChange(e)}>\n          {LESSONS.map(x => {\n            return <option key={x} value={x}>Lesson {x}</option>\n          })}\n        </select>\n        <div className=\"centered\">\n            <p>{1 + this.state.currentQueue.length} Left</p>\n            <h1 className=\"centered kanji\">{vocab.kanji == \"\"? vocab.kana : vocab.kanji}</h1>\n            {this.state.revealDetails? <div>\n              {vocab.kanji == \"\"? \n              <h2 className=\"pronounciation\">{vocab.romaji.join(\", \")}</h2> : \n              <h2 className=\"pronounciation\">{vocab.kana}<br></br>{vocab.romaji.join(\", \")}</h2>}\n              <h2 className=\"english\">{vocab.english.join(\", \")}</h2>\n            </div> : undefined }\n        </div>\n        <div className=\"centered\">\n          Enter the romaji that corresponds to this word\n          <input className=\"main-textbox\" type=\"text\" onKeyDown={e => this.onKeyDown(e)}></input>\n        </div>\n      </div>\n    );\n  }\n}\n",["24","25"],"C:\\Users\\Mark\\Desktop\\My Stuff\\Programming\\genki-vocab\\src\\reportWebVitals.js",[],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":3,"column":8,"nodeType":"32","messageId":"33","endLine":3,"endColumn":12},{"ruleId":"30","severity":1,"message":"34","line":15,"column":7,"nodeType":"32","messageId":"33","endLine":15,"endColumn":21},{"ruleId":"35","severity":1,"message":"36","line":63,"column":34,"nodeType":"37","messageId":"38","endLine":63,"endColumn":36},{"ruleId":"35","severity":1,"message":"36","line":165,"column":57,"nodeType":"37","messageId":"38","endLine":165,"endColumn":59},{"ruleId":"35","severity":1,"message":"36","line":167,"column":28,"nodeType":"37","messageId":"38","endLine":167,"endColumn":30},{"ruleId":"26","replacedBy":"39"},{"ruleId":"28","replacedBy":"40"},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'lessonContents' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["41"],["42"],"no-global-assign","no-unsafe-negation"]